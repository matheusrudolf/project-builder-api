# VARIAVEIS GLOBAIS
# O Service Name do Oracle precisa ser separado por uma barrra /
# Se separarmos por dois pontos : estaremos informando o instaceName do oracle

# SERVER
server.port=8080
server.servlet.context-path=/plugin-projectbuilder

# SPRING
spring.application.name=projectbuilder
spring.application.description=ProjectBuilder
spring.application.version=@project.version@
spring.jmx.enabled=true
spring.package.name=ProjectBuilder

# BANCO DE DADOS - ORACLE
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.password=${oracle.password}
#spring.datasource.url=${database.oracle.url}
# spring.datasource.username=${oracle.user}

# HIBERNATE
# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# spring.jpa.properties.hibernate.ddl-auto=none
# spring.jpa.properties.hibernate.dialect=nbsStarter.dialect.DialectOracle
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# spring.jpa.show-sql=true
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# SWAGGER
springdoc.swagger-ui.path=/swagger-ui
#springdoc.swagger-ui.disable-swagger-default-url=true
#springdoc.swagger-ui.url=${server.servlet.context-path}/nbs/openapi

spring.output.ansi.enabled=always

spring.application.admin.enabled=true
#server.ssl.key-store=classpath:resources/keystore.p12
#server.ssl.key-store-password=password
#server.ssl.keyStoreType:PKCS12
#server.ssl.keyAlias:tomcat

#TOKEN
token.enabled=false

# ID do servidor NBSAPI_SERVER
# Este ID sera passado por variavel de ambiente pelo modulo nbs_api.exe (NBS_SERVIDOR_ID)
# Caso seja diferente de zero, este valor sera concatenado no nome dos containers
nbs.servidor.id=0